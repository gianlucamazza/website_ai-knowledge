{"version":"1.135.0","results":[{"check_id":"yaml.github-actions.security.run-shell-injection.run-shell-injection","path":".github/workflows/cache-config.yml","start":{"line":49,"col":9,"offset":1436},"end":{"line":55,"col":2,"offset":1825},"extra":{"message":"Using variable interpolation `${{...}}` with `github` context data in a `run:` step could allow an attacker to inject their own code into the runner. This would allow them to steal secrets and code. `github` context data can have arbitrary user input and should be treated as untrusted. Instead, use an intermediate environment variable with `env:` to store the data and use the environment variable in the `run:` script. Be sure to use double-quotes the environment variable, like this: \"$ENVVAR\".","metadata":{"category":"security","cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"references":["https://docs.github.com/en/actions/learn-github-actions/security-hardening-for-github-actions#understanding-the-risk-of-script-injections","https://securitylab.github.com/research/github-actions-untrusted-input/"],"technology":["github-actions"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"HIGH","confidence":"HIGH","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/yaml.github-actions.security.run-shell-injection.run-shell-injection","shortlink":"https://sg.run/pkzk"},"severity":"ERROR","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"yaml.github-actions.security.run-shell-injection.run-shell-injection","path":".github/workflows/cache-config.yml","start":{"line":60,"col":9,"offset":2004},"end":{"line":66,"col":2,"offset":2369},"extra":{"message":"Using variable interpolation `${{...}}` with `github` context data in a `run:` step could allow an attacker to inject their own code into the runner. This would allow them to steal secrets and code. `github` context data can have arbitrary user input and should be treated as untrusted. Instead, use an intermediate environment variable with `env:` to store the data and use the environment variable in the `run:` script. Be sure to use double-quotes the environment variable, like this: \"$ENVVAR\".","metadata":{"category":"security","cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"references":["https://docs.github.com/en/actions/learn-github-actions/security-hardening-for-github-actions#understanding-the-risk-of-script-injections","https://securitylab.github.com/research/github-actions-untrusted-input/"],"technology":["github-actions"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"HIGH","confidence":"HIGH","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/yaml.github-actions.security.run-shell-injection.run-shell-injection","shortlink":"https://sg.run/pkzk"},"severity":"ERROR","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"yaml.github-actions.security.run-shell-injection.run-shell-injection","path":".github/workflows/cache-config.yml","start":{"line":71,"col":9,"offset":2512},"end":{"line":75,"col":47,"offset":2846},"extra":{"message":"Using variable interpolation `${{...}}` with `github` context data in a `run:` step could allow an attacker to inject their own code into the runner. This would allow them to steal secrets and code. `github` context data can have arbitrary user input and should be treated as untrusted. Instead, use an intermediate environment variable with `env:` to store the data and use the environment variable in the `run:` script. Be sure to use double-quotes the environment variable, like this: \"$ENVVAR\".","metadata":{"category":"security","cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"references":["https://docs.github.com/en/actions/learn-github-actions/security-hardening-for-github-actions#understanding-the-risk-of-script-injections","https://securitylab.github.com/research/github-actions-untrusted-input/"],"technology":["github-actions"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"HIGH","confidence":"HIGH","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/yaml.github-actions.security.run-shell-injection.run-shell-injection","shortlink":"https://sg.run/pkzk"},"severity":"ERROR","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"bash.curl.security.curl-pipe-bash.curl-pipe-bash","path":"act-installation.sh","start":{"line":35,"col":13,"offset":865},"end":{"line":35,"col":92,"offset":944},"extra":{"message":"Data is being piped into `bash` from a `curl` command. An attacker with control of the server in the `curl` command could inject malicious code into the pipe, resulting in a system compromise. Avoid piping untrusted data into `bash` or any other shell if you can. If you must do this, consider checking the SHA sum of the content returned by the server to verify its integrity.","metadata":{"owasp":["A03:2021 - Injection"],"cwe":["CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"],"category":"security","technology":["bash","curl"],"confidence":"LOW","references":["https://owasp.org/Top10/A03_2021-Injection"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/bash.curl.security.curl-pipe-bash.curl-pipe-bash","shortlink":"https://sg.run/KXz6"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"bash.curl.security.curl-pipe-bash.curl-pipe-bash","path":"act-installation.sh","start":{"line":40,"col":9,"offset":1037},"end":{"line":40,"col":88,"offset":1116},"extra":{"message":"Data is being piped into `bash` from a `curl` command. An attacker with control of the server in the `curl` command could inject malicious code into the pipe, resulting in a system compromise. Avoid piping untrusted data into `bash` or any other shell if you can. If you must do this, consider checking the SHA sum of the content returned by the server to verify its integrity.","metadata":{"owasp":["A03:2021 - Injection"],"cwe":["CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"],"category":"security","technology":["bash","curl"],"confidence":"LOW","references":["https://owasp.org/Top10/A03_2021-Injection"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/bash.curl.security.curl-pipe-bash.curl-pipe-bash","shortlink":"https://sg.run/KXz6"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"yaml.docker-compose.security.no-new-privileges.no-new-privileges","path":"act-services/docker-compose.yml","start":{"line":8,"col":3,"offset":171},"end":{"line":8,"col":16,"offset":184},"extra":{"message":"Service 'postgres-test' allows for privilege escalation via setuid or setgid binaries. Add 'no-new-privileges:true' in 'security_opt' to prevent this.","metadata":{"cwe":["CWE-732: Incorrect Permission Assignment for Critical Resource"],"owasp":["A05:2021 - Security Misconfiguration","A06:2017 - Security Misconfiguration"],"references":["https://raesene.github.io/blog/2019/06/01/docker-capabilities-and-no-new-privs/","https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt","https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"],"category":"security","technology":["docker-compose"],"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authorization"],"source":"https://semgrep.dev/r/yaml.docker-compose.security.no-new-privileges.no-new-privileges","shortlink":"https://sg.run/0n8q"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service","path":"act-services/docker-compose.yml","start":{"line":8,"col":3,"offset":171},"end":{"line":8,"col":16,"offset":184},"extra":{"message":"Service 'postgres-test' is running with a writable root filesystem. This may allow malicious applications to download and run additional payloads, or modify container files. If an application inside a container has to save something temporarily consider using a tmpfs. Add 'read_only: true' to this service to prevent this.","metadata":{"cwe":["CWE-732: Incorrect Permission Assignment for Critical Resource"],"owasp":["A05:2021 - Security Misconfiguration","A06:2017 - Security Misconfiguration"],"references":["https://docs.docker.com/compose/compose-file/compose-file-v3/#domainname-hostname-ipc-mac_address-privileged-read_only-shm_size-stdin_open-tty-user-working_dir","https://blog.atomist.com/security-of-docker-kubernetes/","https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-8-set-filesystem-and-volumes-to-read-only"],"category":"security","technology":["docker-compose"],"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authorization"],"source":"https://semgrep.dev/r/yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service","shortlink":"https://sg.run/e4JE"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"yaml.docker-compose.security.no-new-privileges.no-new-privileges","path":"act-services/docker-compose.yml","start":{"line":30,"col":3,"offset":759},"end":{"line":30,"col":13,"offset":769},"extra":{"message":"Service 'redis-test' allows for privilege escalation via setuid or setgid binaries. Add 'no-new-privileges:true' in 'security_opt' to prevent this.","metadata":{"cwe":["CWE-732: Incorrect Permission Assignment for Critical Resource"],"owasp":["A05:2021 - Security Misconfiguration","A06:2017 - Security Misconfiguration"],"references":["https://raesene.github.io/blog/2019/06/01/docker-capabilities-and-no-new-privs/","https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt","https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"],"category":"security","technology":["docker-compose"],"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authorization"],"source":"https://semgrep.dev/r/yaml.docker-compose.security.no-new-privileges.no-new-privileges","shortlink":"https://sg.run/0n8q"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service","path":"act-services/docker-compose.yml","start":{"line":30,"col":3,"offset":759},"end":{"line":30,"col":13,"offset":769},"extra":{"message":"Service 'redis-test' is running with a writable root filesystem. This may allow malicious applications to download and run additional payloads, or modify container files. If an application inside a container has to save something temporarily consider using a tmpfs. Add 'read_only: true' to this service to prevent this.","metadata":{"cwe":["CWE-732: Incorrect Permission Assignment for Critical Resource"],"owasp":["A05:2021 - Security Misconfiguration","A06:2017 - Security Misconfiguration"],"references":["https://docs.docker.com/compose/compose-file/compose-file-v3/#domainname-hostname-ipc-mac_address-privileged-read_only-shm_size-stdin_open-tty-user-working_dir","https://blog.atomist.com/security-of-docker-kubernetes/","https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-8-set-filesystem-and-volumes-to-read-only"],"category":"security","technology":["docker-compose"],"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authorization"],"source":"https://semgrep.dev/r/yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service","shortlink":"https://sg.run/e4JE"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"yaml.docker-compose.security.no-new-privileges.no-new-privileges","path":"act-services/docker-compose.yml","start":{"line":46,"col":3,"offset":1076},"end":{"line":46,"col":11,"offset":1084},"extra":{"message":"Service 'wiremock' allows for privilege escalation via setuid or setgid binaries. Add 'no-new-privileges:true' in 'security_opt' to prevent this.","metadata":{"cwe":["CWE-732: Incorrect Permission Assignment for Critical Resource"],"owasp":["A05:2021 - Security Misconfiguration","A06:2017 - Security Misconfiguration"],"references":["https://raesene.github.io/blog/2019/06/01/docker-capabilities-and-no-new-privs/","https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt","https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"],"category":"security","technology":["docker-compose"],"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authorization"],"source":"https://semgrep.dev/r/yaml.docker-compose.security.no-new-privileges.no-new-privileges","shortlink":"https://sg.run/0n8q"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service","path":"act-services/docker-compose.yml","start":{"line":46,"col":3,"offset":1076},"end":{"line":46,"col":11,"offset":1084},"extra":{"message":"Service 'wiremock' is running with a writable root filesystem. This may allow malicious applications to download and run additional payloads, or modify container files. If an application inside a container has to save something temporarily consider using a tmpfs. Add 'read_only: true' to this service to prevent this.","metadata":{"cwe":["CWE-732: Incorrect Permission Assignment for Critical Resource"],"owasp":["A05:2021 - Security Misconfiguration","A06:2017 - Security Misconfiguration"],"references":["https://docs.docker.com/compose/compose-file/compose-file-v3/#domainname-hostname-ipc-mac_address-privileged-read_only-shm_size-stdin_open-tty-user-working_dir","https://blog.atomist.com/security-of-docker-kubernetes/","https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-8-set-filesystem-and-volumes-to-read-only"],"category":"security","technology":["docker-compose"],"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authorization"],"source":"https://semgrep.dev/r/yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service","shortlink":"https://sg.run/e4JE"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"yaml.docker-compose.security.no-new-privileges.no-new-privileges","path":"act-services/docker-compose.yml","start":{"line":62,"col":3,"offset":1480},"end":{"line":62,"col":8,"offset":1485},"extra":{"message":"Service 'minio' allows for privilege escalation via setuid or setgid binaries. Add 'no-new-privileges:true' in 'security_opt' to prevent this.","metadata":{"cwe":["CWE-732: Incorrect Permission Assignment for Critical Resource"],"owasp":["A05:2021 - Security Misconfiguration","A06:2017 - Security Misconfiguration"],"references":["https://raesene.github.io/blog/2019/06/01/docker-capabilities-and-no-new-privs/","https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt","https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"],"category":"security","technology":["docker-compose"],"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authorization"],"source":"https://semgrep.dev/r/yaml.docker-compose.security.no-new-privileges.no-new-privileges","shortlink":"https://sg.run/0n8q"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service","path":"act-services/docker-compose.yml","start":{"line":62,"col":3,"offset":1480},"end":{"line":62,"col":8,"offset":1485},"extra":{"message":"Service 'minio' is running with a writable root filesystem. This may allow malicious applications to download and run additional payloads, or modify container files. If an application inside a container has to save something temporarily consider using a tmpfs. Add 'read_only: true' to this service to prevent this.","metadata":{"cwe":["CWE-732: Incorrect Permission Assignment for Critical Resource"],"owasp":["A05:2021 - Security Misconfiguration","A06:2017 - Security Misconfiguration"],"references":["https://docs.docker.com/compose/compose-file/compose-file-v3/#domainname-hostname-ipc-mac_address-privileged-read_only-shm_size-stdin_open-tty-user-working_dir","https://blog.atomist.com/security-of-docker-kubernetes/","https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-8-set-filesystem-and-volumes-to-read-only"],"category":"security","technology":["docker-compose"],"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authorization"],"source":"https://semgrep.dev/r/yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service","shortlink":"https://sg.run/e4JE"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring","path":"apps/site/middleware/security.js","start":{"line":281,"col":18,"offset":6820},"end":{"line":281,"col":50,"offset":6852},"extra":{"message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","metadata":{"cwe":["CWE-134: Use of Externally-Controlled Format String"],"owasp":["A01:2021 - Broken Access Control"],"category":"security","technology":["javascript"],"subcategory":["audit"],"likelihood":"MEDIUM","impact":"LOW","confidence":"LOW","references":["https://cwe.mitre.org/data/definitions/134.html"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Validation"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring","shortlink":"https://sg.run/7Y5R"},"severity":"INFO","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.formatted-sql-query.formatted-sql-query","path":"pipelines/database/connection.py","start":{"line":189,"col":23,"offset":6529},"end":{"line":189,"col":72,"offset":6578},"extra":{"message":"Detected possible formatted SQL query. Use parameterized queries instead.","metadata":{"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe":["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"],"references":["https://stackoverflow.com/questions/775296/mysql-parameterized-queries"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["SQL Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.formatted-sql-query.formatted-sql-query","shortlink":"https://sg.run/EkWw"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.sqli.asyncpg-sqli.asyncpg-sqli","path":"pipelines/database/connection.py","start":{"line":189,"col":23,"offset":6529},"end":{"line":189,"col":72,"offset":6578},"extra":{"message":"Detected string concatenation with a non-literal variable in a asyncpg Python SQL statement. This could lead to SQL injection if the variable is user-controlled and not properly sanitized. In order to prevent SQL injection, use parameterized queries or prepared statements instead. You can create parameterized queries like so: 'conn.fetch(\"SELECT \"\"\"\nDat FROM table\", value)'. You can also create prepared statements with 'Connection.prepare': 'stmt = conn.prepare(\"SELECT \"\"\"\nDat FROM table\"); await stmt.fetch(user_value)'","metadata":{"references":["https://github.com/MagicStack/asyncpg","https://magicstack.github.io/asyncpg/current/"],"category":"security","cwe":["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"],"technology":["asyncpg"],"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["SQL Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.sqli.asyncpg-sqli.asyncpg-sqli","shortlink":"https://sg.run/0nBB"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.sqli.asyncpg-sqli.asyncpg-sqli","path":"pipelines/database/connection.py","start":{"line":189,"col":23,"offset":6529},"end":{"line":189,"col":72,"offset":6578},"extra":{"message":"Detected string concatenation with a non-literal variable in a asyncpg Python SQL statement. This could lead to SQL injection if the variable is user-controlled and not properly sanitized. In order to prevent SQL injection, use parameterized queries or prepared statements instead. You can create parameterized queries like so: 'conn.fetch(\"SELECT $1 FROM table\", value)'. You can also create prepared statements with 'Connection.prepare': 'stmt = conn.prepare(\"SELECT $1 FROM table\"); await stmt.fetch(user_value)'","metadata":{"references":["https://github.com/MagicStack/asyncpg","https://magicstack.github.io/asyncpg/current/"],"category":"security","cwe":["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"],"technology":["asyncpg"],"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["SQL Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.sqli.asyncpg-sqli.asyncpg-sqli","shortlink":"https://sg.run/0nBB"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.sqlalchemy.security.sqlalchemy-execute-raw-query.sqlalchemy-execute-raw-query","path":"pipelines/database/connection.py","start":{"line":189,"col":23,"offset":6529},"end":{"line":189,"col":72,"offset":6578},"extra":{"message":"Avoiding SQL string concatenation: untrusted input concatenated with raw SQL query can result in SQL Injection. In order to execute raw query safely, prepared statement should be used. SQLAlchemy provides TextualSQL to easily used prepared statement with named parameters. For complex SQL composition, use SQL Expression Language or Schema Definition Language. In most cases, SQLAlchemy ORM will be a better option.","metadata":{"cwe":["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"],"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"references":["https://docs.sqlalchemy.org/en/14/core/tutorial.html#using-textual-sql","https://www.tutorialspoint.com/sqlalchemy/sqlalchemy_quick_guide.htm","https://docs.sqlalchemy.org/en/14/core/tutorial.html#using-more-specific-text-with-table-expression-literal-column-and-expression-column"],"category":"security","technology":["sqlalchemy"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["SQL Injection"],"source":"https://semgrep.dev/r/python.sqlalchemy.security.sqlalchemy-execute-raw-query.sqlalchemy-execute-raw-query","shortlink":"https://sg.run/2b1L"},"severity":"ERROR","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.deserialization.pickle.avoid-pickle","path":"pipelines/dedup/lsh_index.py","start":{"line":363,"col":17,"offset":11778},"end":{"line":363,"col":43,"offset":11804},"extra":{"message":"Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.","metadata":{"owasp":["A08:2017 - Insecure Deserialization","A08:2021 - Software and Data Integrity Failures"],"cwe":["CWE-502: Deserialization of Untrusted Data"],"references":["https://docs.python.org/3/library/pickle.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle","shortlink":"https://sg.run/OPwB"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.deserialization.pickle.avoid-pickle","path":"pipelines/dedup/lsh_index.py","start":{"line":388,"col":30,"offset":12473},"end":{"line":390,"col":18,"offset":12525},"extra":{"message":"Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.","metadata":{"owasp":["A08:2017 - Insecure Deserialization","A08:2021 - Software and Data Integrity Failures"],"cwe":["CWE-502: Deserialization of Untrusted Data"],"references":["https://docs.python.org/3/library/pickle.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle","shortlink":"https://sg.run/OPwB"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.deserialization.avoid-pyyaml-load.avoid-pyyaml-load","path":"scripts/link_checker.py","start":{"line":88,"col":27,"offset":2440},"end":{"line":88,"col":61,"offset":2474},"extra":{"message":"Detected a possible YAML deserialization vulnerability. `yaml.unsafe_load`, `yaml.Loader`, `yaml.CLoader`, and `yaml.UnsafeLoader` are all known to be unsafe methods of deserializing YAML. An attacker with control over the YAML input could create special YAML input that allows the attacker to run arbitrary Python code. This would allow the attacker to steal files, download and install malware, or otherwise take over the machine. Use `yaml.safe_load` or `yaml.SafeLoader` instead.","fix":"yaml.load(parts[1], Loader=Loader)","metadata":{"owasp":["A08:2017 - Insecure Deserialization","A08:2021 - Software and Data Integrity Failures"],"cwe":["CWE-502: Deserialization of Untrusted Data"],"references":["https://github.com/yaml/pyyaml/wiki/PyYAML-yaml.load(input)-Deprecation","https://nvd.nist.gov/vuln/detail/CVE-2017-18342"],"category":"security","technology":["pyyaml"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/python.lang.security.deserialization.avoid-pyyaml-load.avoid-pyyaml-load","shortlink":"https://sg.run/we9Y"},"severity":"ERROR","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"problem-based-packs.insecure-transport.js-node.http-request.http-request","path":"scripts/port-allocator.js","start":{"line":58,"col":7,"offset":1408},"end":{"line":66,"col":9,"offset":1645},"extra":{"message":"Checks for requests sent to http:// URLs. This is dangerous as the server is attempting to connect to a website that does not encrypt traffic with TLS. Instead, only send requests to https:// URLs.","metadata":{"likelihood":"MEDIUM","impact":"MEDIUM","confidence":"MEDIUM","category":"security","cwe":"CWE-319: Cleartext Transmission of Sensitive Information","owasp":"A03:2017 - Sensitive Data Exposure","references":["https://nodejs.org/api/http.html#http_http_request_options_callback"],"subcategory":["vuln"],"technology":["node.js"],"vulnerability":"Insecure Transport","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Mishandled Sensitive Information"],"source":"https://semgrep.dev/r/problem-based-packs.insecure-transport.js-node.http-request.http-request","shortlink":"https://sg.run/N4Qy"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"problem-based-packs.insecure-transport.js-node.using-http-server.using-http-server","path":"scripts/port-allocator.js","start":{"line":58,"col":19,"offset":1420},"end":{"line":58,"col":23,"offset":1424},"extra":{"message":"Checks for any usage of http servers instead of https servers. Encourages the usage of https protocol instead of http, which does not have TLS and is therefore unencrypted. Using http can lead to man-in-the-middle attacks in which the attacker is able to read sensitive information.","metadata":{"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","category":"security","cwe":"CWE-319: Cleartext Transmission of Sensitive Information","owasp":["A02:2021 - Cryptographic Failures","A03:2017 - Sensitive Data Exposure"],"references":["https://nodejs.org/api/http.html#http_class_http_agent","https://groups.google.com/g/rubyonrails-security/c/NCCsca7TEtY"],"subcategory":["audit"],"technology":["node.js"],"vulnerability":"Insecure Transport","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Mishandled Sensitive Information"],"source":"https://semgrep.dev/r/problem-based-packs.insecure-transport.js-node.using-http-server.using-http-server","shortlink":"https://sg.run/x1zL"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.deserialization.avoid-pyyaml-load.avoid-pyyaml-load","path":"scripts/validate_content.py","start":{"line":101,"col":27,"offset":3032},"end":{"line":101,"col":61,"offset":3066},"extra":{"message":"Detected a possible YAML deserialization vulnerability. `yaml.unsafe_load`, `yaml.Loader`, `yaml.CLoader`, and `yaml.UnsafeLoader` are all known to be unsafe methods of deserializing YAML. An attacker with control over the YAML input could create special YAML input that allows the attacker to run arbitrary Python code. This would allow the attacker to steal files, download and install malware, or otherwise take over the machine. Use `yaml.safe_load` or `yaml.SafeLoader` instead.","fix":"yaml.load(parts[1], Loader=Loader)","metadata":{"owasp":["A08:2017 - Insecure Deserialization","A08:2021 - Software and Data Integrity Failures"],"cwe":["CWE-502: Deserialization of Untrusted Data"],"references":["https://github.com/yaml/pyyaml/wiki/PyYAML-yaml.load(input)-Deprecation","https://nvd.nist.gov/vuln/detail/CVE-2017-18342"],"category":"security","technology":["pyyaml"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/python.lang.security.deserialization.avoid-pyyaml-load.avoid-pyyaml-load","shortlink":"https://sg.run/we9Y"},"severity":"ERROR","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}}],"errors":[{"code":2,"level":"warn","type":"Other syntax error","message":"Other syntax error at line .github/workflows/test-and-coverage-fixed.yml:98:\n (approximate error location; error nearby after) error calling parser: did not find expected key character 0 position 0 returned: 0","path":".github/workflows/test-and-coverage-fixed.yml"},{"code":2,"level":"warn","type":"Other syntax error","message":"Other syntax error at line quality-control-configs/.markdownlint-cli2.yaml:107:\n (approximate error location; error nearby after) error calling parser: found unknown escape character character 0 position 0 returned: 0","path":"quality-control-configs/.markdownlint-cli2.yaml"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"yaml.github-actions.security.curl-eval.curl-eval","message":"Internal matching error when running yaml.github-actions.security.curl-eval.curl-eval on .github/workflows/markdown-quality.yml:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nrule yaml.github-actions.security.curl-eval.curl-eval: metavariable-pattern failed when parsing $SHELL's content as Bash: echo \"## Quality Gate Decision\" >> $GITHUB_STEP_SUMMARY\necho \"\" >> $GITHUB_STEP_SUMMARY\n\nHAS_VIOLATIONS=\"${{ needs.markdown-validation.outputs.has_violations }}\"\nAUTO_FIX_SUCCESS=\"${{ needs.markdown-validation.outputs.auto_fix_successful }}\"\nVIOLATIONS_COUNT=\"${{ needs.markdown-validation.outputs.violations_count }}\"\n\necho \"- **Has violations**: $HAS_VIOLATIONS\" >> $GITHUB_STEP_SUMMARY\necho \"- **Violations count**: $VIOLATIONS_COUNT\" >> $GITHUB_STEP_SUMMARY\necho \"- **Auto-fix successful**: $AUTO_FIX_SUCCESS\" >> $GITHUB_STEP_SUMMARY\necho \"\" >> $GITHUB_STEP_SUMMARY\n\n# Determine if quality gate passes\nif [ \"$HAS_VIOLATIONS\" = \"false\" ]; then\n  echo \"D]F **QUALITY GATE: PASSED**\" >> $GITHUB_STEP_SUMMARY\n  echo \"\" >> $GITHUB_STEP_SUMMARY\n  echo \"All markdown quality checks passed successfully.\" >> $GITHUB_STEP_SUMMARY\n  exit 0\nelif [ \"$AUTO_FIX_SUCCESS\" = \"true\" ]; then\n  echo \"D]F **QUALITY GATE: PASSED (AUTO-FIXED)**\" >> $GITHUB_STEP_SUMMARY\n  echo \"\" >> $GITHUB_STEP_SUMMARY  \n  echo \"Violations were automatically fixed and committed.\" >> $GITHUB_STEP_SUMMARY\n  exit 0\nelif [ \"$AUTO_FIX_SUCCESS\" = \"substantial\" ]; then\n  echo \"R`Op **QUALITY GATE: SUBSTANTIAL SUCCESS**\" >> $GITHUB_STEP_SUMMARY\n  echo \"\" >> $GITHUB_STEP_SUMMARY\n  echo \"Most violations were fixed automatically (DJe5 remaining).\" >> $GITHUB_STEP_SUMMARY\n  echo \"\" >> $GITHUB_STEP_SUMMARY\n  echo \"### Remaining Tasks:\" >> $GITHUB_STEP_SUMMARY\n  echo \"1. Review the few remaining violations\" >> $GITHUB_STEP_SUMMARY\n  echo \"2. Apply final manual fixes if needed\" >> $GITHUB_STEP_SUMMARY\n  echo \"3. Quality gate will pass with this level of fixes\" >> $GITHUB_STEP_SUMMARY\n  exit 0\nelif [ \"$AUTO_FIX_SUCCESS\" = \"partial\" ]; then\n  echo \"D[aQyP **QUALITY GATE: PARTIAL SUCCESS**\" >> $GITHUB_STEP_SUMMARY\n  echo \"\"... (truncated 2178 more characters)","path":".github/workflows/markdown-quality.yml"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"yaml.github-actions.security.curl-eval.curl-eval","message":"Internal matching error when running yaml.github-actions.security.curl-eval.curl-eval on quality-control-configs/.github/workflows/markdown-quality.yml:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nrule yaml.github-actions.security.curl-eval.curl-eval: metavariable-pattern failed when parsing $SHELL's content as Bash: echo \"R`TK Generating quality gate assessment...\"\n\n# Combine all results\npython -c \"\nimport json, os, glob\nfrom pathlib import Path\n\nresults = {}\ntotal_issues = 0\ncritical_issues = 0\n\n# Process all JSON result files\nfor file in glob.glob('*.json'):\n    if 'markdown-lint' in file:\n        try:\n            with open(file) as f:\n                data = json.load(f)\n            if isinstance(data, list):\n                issues = len(data)\n                total_issues += issues\n                # Count critical issues (errors)\n                critical_issues += sum(1 for item in data if 'error' in str(item).lower())\n            results['markdown_lint'] = issues\n        except:\n            pass\n    \n    elif 'vale-results' in file:\n        try:\n            with open(file) as f:\n                data = json.load(f)\n            prose_issues = sum(len(issues) for issues in data.values())\n            results['prose_quality'] = prose_issues\n            total_issues += prose_issues\n        except:\n            pass\n    \n    elif 'content-analysis' in file:\n        try:\n            with open(file) as f:\n                data = json.load(f)\n            content_issues = data.get('total_issues', 0)\n            results['content_analysis'] = content_issues\n            critical_issues += data.get('issues_by_severity', {}).get('error', 0)\n        except:\n            pass\n\n# Quality gate logic\ngate_passed = critical_issues == 0 and total_issues < 10\n\nprint(f'Total Issues: {total_issues}')\nprint(f'Critical Issues: {critical_issues}')\nprint(f'Quality Gate: {'PASSED' if gate_passed else 'FAILED'}')\n\n# Output for GitHub\nprint(f'::set-output name=total_issues::{total_issues}')\nprint(f'::set-output name=critical_issues::{critical_issues}')\nprint(f'::set-output name=gate_passed::{str(gate_pa... (truncated 749 more characters)","path":"quality-control-configs/.github/workflows/markdown-quality.yml"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"yaml.github-actions.security.curl-eval.curl-eval","message":"Internal matching error when running yaml.github-actions.security.curl-eval.curl-eval on .github/workflows/markdown-quality.yml:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nrule yaml.github-actions.security.curl-eval.curl-eval: metavariable-pattern failed when parsing $SHELL's content as Bash: git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\n\nif git diff --quiet; then\n  echo \"No changes to commit\"\nelse\n  git add apps/site/src/content/**/*.md\n  git commit -m \"fix(markdown): auto-fix markdown quality violations\n  \n  - Applied automated fixes for MD032 (list spacing)\n  - Fixed MD031 (code block spacing)  \n  - Added MD040 (code language specification)\n  - Fixed MD047 (file ending newlines)\n  - Applied MD022 (heading spacing)\n  \n  R`eW Generated with [Claude Code](https://claude.ai/code)\n  \n  Co-Authored-By: Claude <noreply@anthropic.com>\"\n  \n  git push\n  echo \"D]F Auto-fixes committed and pushed\"\nfi\n","path":".github/workflows/markdown-quality.yml"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"yaml.github-actions.security.curl-eval.curl-eval","message":"Internal matching error when running yaml.github-actions.security.curl-eval.curl-eval on quality-control-configs/.github/workflows/markdown-quality.yml:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nrule yaml.github-actions.security.curl-eval.curl-eval: metavariable-pattern failed when parsing $SHELL's content as Bash: git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add -A\ngit commit -m \"R`eW Auto-fix markdown quality issues\n\n- Applied automatic fixes for safe markdown rules\n- Fixed formatting, spacing, and structural issues\n- No content changes were made\n\nGenerated by: ${{ github.workflow }} #${{ github.run_number }}\"\ngit push\n","path":"quality-control-configs/.github/workflows/markdown-quality.yml"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"yaml.github-actions.security.curl-eval.curl-eval","message":"Internal matching error when running yaml.github-actions.security.curl-eval.curl-eval on .github/workflows/test-and-coverage.yml:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nrule yaml.github-actions.security.curl-eval.curl-eval: metavariable-pattern failed when parsing $SHELL's content as Bash: pip install coverage codecov jq\n\n# Initialize summary\necho \"## R`hk Test Results Summary\" > test-summary.md\necho \"\" >> test-summary.md\n\n# Python test results\necho \"### R`QN Python Pipeline Tests\" >> test-summary.md\nPYTHON_ARTIFACTS=$(find . -name \"python-coverage-*\" -type d | head -1)\nif [ -n \"$PYTHON_ARTIFACTS\" ] && [ -d \"$PYTHON_ARTIFACTS\" ]; then\n  echo \"- D]F Unit Tests: Passed\" >> test-summary.md\n  echo \"- D]F Integration Tests: Passed\" >> test-summary.md\n  echo \"- D]F Database Tests: Passed\" >> test-summary.md\n  echo \"- D]F Security Tests: Passed\" >> test-summary.md\n  echo \"- D]F Performance Tests: Passed\" >> test-summary.md\n  echo \"- R`TK [Python Coverage Report](./${PYTHON_ARTIFACTS}/coverage/)\" >> test-summary.md\nelse\n  echo \"- D^T Python test results: Not found\" >> test-summary.md\nfi\necho \"\" >> test-summary.md\n\n# Frontend test results\necho \"### R`MQ Frontend Tests\" >> test-summary.md\nFRONTEND_ARTIFACTS=$(find . -name \"frontend-test-results-*\" -type d | head -1)\nif [ -n \"$FRONTEND_ARTIFACTS\" ] && [ -d \"$FRONTEND_ARTIFACTS\" ]; then\n  echo \"- D]F Unit Tests: Passed\" >> test-summary.md\n  echo \"- D]F E2E Tests: Passed\" >> test-summary.md\n  echo \"- R`TK [Frontend Coverage Report](./${FRONTEND_ARTIFACTS}/coverage/)\" >> test-summary.md\nelse\n  echo \"- D^T Frontend test results: Not found\" >> test-summary.md\nfi\necho \"\" >> test-summary.md\n\n# Security scan results\necho \"### R`US Security Analysis\" >> test-summary.md\nif [ -d \"security-reports\" ]; then\n  echo \"- D]F Bandit Security Scan: Completed\" >> test-summary.md\n  echo \"- D]F Safety Dependency Check: Completed\" >> test-summary.md\n  echo \"- D]F Semgrep Analysis: Completed\" >> test-summary.md\n  echo \"- R`TK [Security Reports](./security-reports/)\" >> test-summary.md\nelse\n  echo \"- D^T Security scan results: No... (truncated 772 more characters)","path":".github/workflows/test-and-coverage.yml"},{"code":3,"level":"warn","type":["PartialParsing",[{"path":".github/workflows/act-compatible-test.yml","start":{"line":238,"col":18,"offset":6826},"end":{"line":255,"col":3,"offset":7614}}]],"message":"Syntax error at line .github/workflows/act-compatible-test.yml:238:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `\"R`hk Local Test Results Summary\"\necho \"============================\"\necho \"\"\necho \"Unit Tests: ${{ needs.local-unit-tests.result }}\"\necho \"Security Tests: ${{ needs.local-security-tests.result }}\"\necho \"Quality Tests: ${{ needs.local-quality-tests.result }}\"\necho \"Integration Tests: ${{ needs.local-integration-tests.result }}\"\necho \"\"\n\nif [[ \"${{ needs.local-unit-tests.result }}\" == \"success\" && \\\n      \"${{ needs.local-security-tests.result }}\" == \"success\" && \\\n      \"${{ needs.local-quality-tests.result }}\" == \"success\" && \\\n      (\"${{ needs.local-integration-tests.result }}\" == \"success\" || \"${{ needs.local-integration-tests.result }}\" == \"skipped\") ]]; then\n  echo \"D]F All local tests passed!\"\nelse\n  echo \"D^M Some tests failed - check individual job results\"\n  exit 1\nfi` was unexpected","path":".github/workflows/act-compatible-test.yml","spans":[{"file":".github/workflows/act-compatible-test.yml","start":{"line":238,"col":18,"offset":6826},"end":{"line":255,"col":3,"offset":7614}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":".github/workflows/cache-config.yml","start":{"line":51,"col":14,"offset":1442},"end":{"line":51,"col":39,"offset":1467}}]],"message":"Syntax error at line .github/workflows/cache-config.yml:51:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ inputs.cache-key-prefix` was unexpected","path":".github/workflows/cache-config.yml","spans":[{"file":".github/workflows/cache-config.yml","start":{"line":51,"col":14,"offset":1442},"end":{"line":51,"col":39,"offset":1467}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":".github/workflows/cache-config.yml","start":{"line":62,"col":14,"offset":2010},"end":{"line":62,"col":39,"offset":2035}}]],"message":"Syntax error at line .github/workflows/cache-config.yml:62:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ inputs.cache-key-prefix` was unexpected","path":".github/workflows/cache-config.yml","spans":[{"file":".github/workflows/cache-config.yml","start":{"line":62,"col":14,"offset":2010},"end":{"line":62,"col":39,"offset":2035}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":".github/workflows/cache-config.yml","start":{"line":71,"col":39,"offset":2518},"end":{"line":71,"col":77,"offset":2556}},{"path":".github/workflows/cache-config.yml","start":{"line":71,"col":82,"offset":2518},"end":{"line":71,"col":118,"offset":2554}},{"path":".github/workflows/cache-config.yml","start":{"line":72,"col":14,"offset":2518},"end":{"line":72,"col":39,"offset":2543}}]],"message":"Syntax error at line .github/workflows/cache-config.yml:71:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ steps.python-cache.outputs.cache-key` was unexpected","path":".github/workflows/cache-config.yml","spans":[{"file":".github/workflows/cache-config.yml","start":{"line":71,"col":39,"offset":2518},"end":{"line":71,"col":77,"offset":2556}},{"file":".github/workflows/cache-config.yml","start":{"line":71,"col":82,"offset":2518},"end":{"line":71,"col":118,"offset":2554}},{"file":".github/workflows/cache-config.yml","start":{"line":72,"col":14,"offset":2518},"end":{"line":72,"col":39,"offset":2543}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":".github/workflows/ci.yml","start":{"line":285,"col":46,"offset":8579},"end":{"line":285,"col":49,"offset":8582}},{"path":".github/workflows/ci.yml","start":{"line":285,"col":73,"offset":8579},"end":{"line":285,"col":76,"offset":8582}},{"path":".github/workflows/ci.yml","start":{"line":286,"col":49,"offset":8579},"end":{"line":286,"col":70,"offset":8600}},{"path":".github/workflows/ci.yml","start":{"line":286,"col":76,"offset":8579},"end":{"line":286,"col":91,"offset":8594}}]],"message":"Syntax error at line .github/workflows/ci.yml:285:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected","path":".github/workflows/ci.yml","spans":[{"file":".github/workflows/ci.yml","start":{"line":285,"col":46,"offset":8579},"end":{"line":285,"col":49,"offset":8582}},{"file":".github/workflows/ci.yml","start":{"line":285,"col":73,"offset":8579},"end":{"line":285,"col":76,"offset":8582}},{"file":".github/workflows/ci.yml","start":{"line":286,"col":49,"offset":8579},"end":{"line":286,"col":70,"offset":8600}},{"file":".github/workflows/ci.yml","start":{"line":286,"col":76,"offset":8579},"end":{"line":286,"col":91,"offset":8594}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":".github/workflows/ci.yml","start":{"line":336,"col":98,"offset":9748},"end":{"line":353,"col":23,"offset":10267}}]],"message":"Syntax error at line .github/workflows/ci.yml:336:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `|| {\n  echo \"D^M Dev server failed to start on port ${ACTUAL_PORT}\"\n  echo \"R`TK Port status check:\"\n  ss -tlnp | grep \":${ACTUAL_PORT}\" || echo \"No process found on port ${ACTUAL_PORT}\"\n  kill $DEV_PID 2>/dev/null || true\n  exit 1\n}\n\necho \"D]F Dev server started successfully on port ${ACTUAL_PORT}\"\n\n# Run E2E tests with correct base URL\nBASE_URL=http://localhost:${ACTUAL_PORT} npm run test:e2e || E2E_RESULT=$?\n\n# Stop dev server\nkill $DEV_PID 2>/dev/null || true\n\n# Exit with E2E test result\nexit ${E2E_RESULT:-0}\n` was unexpected","path":".github/workflows/ci.yml","spans":[{"file":".github/workflows/ci.yml","start":{"line":336,"col":98,"offset":9748},"end":{"line":353,"col":23,"offset":10267}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":".github/workflows/ci.yml","start":{"line":449,"col":23,"offset":14162},"end":{"line":449,"col":52,"offset":14191}},{"path":".github/workflows/ci.yml","start":{"line":450,"col":27,"offset":14162},"end":{"line":450,"col":58,"offset":14193}},{"path":".github/workflows/ci.yml","start":{"line":451,"col":29,"offset":14162},"end":{"line":451,"col":62,"offset":14195}},{"path":".github/workflows/ci.yml","start":{"line":452,"col":25,"offset":14162},"end":{"line":452,"col":54,"offset":14191}},{"path":".github/workflows/ci.yml","start":{"line":453,"col":25,"offset":14162},"end":{"line":453,"col":54,"offset":14191}},{"path":".github/workflows/ci.yml","start":{"line":454,"col":24,"offset":14162},"end":{"line":454,"col":52,"offset":14190}},{"path":".github/workflows/ci.yml","start":{"line":460,"col":10,"offset":14162},"end":{"line":460,"col":39,"offset":14191}},{"path":".github/workflows/ci.yml","start":{"line":461,"col":10,"offset":14162},"end":{"line":461,"col":41,"offset":14193}},{"path":".github/workflows/ci.yml","start":{"line":462,"col":10,"offset":14162},"end":{"line":462,"col":39,"offset":14191}},{"path":".github/workflows/ci.yml","start":{"line":468,"col":10,"offset":14162},"end":{"line":468,"col":43,"offset":14195}},{"path":".github/workflows/ci.yml","start":{"line":469,"col":10,"offset":14162},"end":{"line":469,"col":39,"offset":14191}},{"path":".github/workflows/ci.yml","start":{"line":470,"col":10,"offset":14162},"end":{"line":470,"col":38,"offset":14190}}]],"message":"Syntax error at line .github/workflows/ci.yml:449:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ needs.quality-checks.result` was unexpected","path":".github/workflows/ci.yml","spans":[{"file":".github/workflows/ci.yml","start":{"line":449,"col":23,"offset":14162},"end":{"line":449,"col":52,"offset":14191}},{"file":".github/workflows/ci.yml","start":{"line":450,"col":27,"offset":14162},"end":{"line":450,"col":58,"offset":14193}},{"file":".github/workflows/ci.yml","start":{"line":451,"col":29,"offset":14162},"end":{"line":451,"col":62,"offset":14195}},{"file":".github/workflows/ci.yml","start":{"line":452,"col":25,"offset":14162},"end":{"line":452,"col":54,"offset":14191}},{"file":".github/workflows/ci.yml","start":{"line":453,"col":25,"offset":14162},"end":{"line":453,"col":54,"offset":14191}},{"file":".github/workflows/ci.yml","start":{"line":454,"col":24,"offset":14162},"end":{"line":454,"col":52,"offset":14190}},{"file":".github/workflows/ci.yml","start":{"line":460,"col":10,"offset":14162},"end":{"line":460,"col":39,"offset":14191}},{"file":".github/workflows/ci.yml","start":{"line":461,"col":10,"offset":14162},"end":{"line":461,"col":41,"offset":14193}},{"file":".github/workflows/ci.yml","start":{"line":462,"col":10,"offset":14162},"end":{"line":462,"col":39,"offset":14191}},{"file":".github/workflows/ci.yml","start":{"line":468,"col":10,"offset":14162},"end":{"line":468,"col":43,"offset":14195}},{"file":".github/workflows/ci.yml","start":{"line":469,"col":10,"offset":14162},"end":{"line":469,"col":39,"offset":14191}},{"file":".github/workflows/ci.yml","start":{"line":470,"col":10,"offset":14162},"end":{"line":470,"col":38,"offset":14190}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":".github/workflows/content-pipeline.yml","start":{"line":156,"col":17,"offset":4546},"end":{"line":156,"col":20,"offset":4549}}]],"message":"Syntax error at line .github/workflows/content-pipeline.yml:156:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected","path":".github/workflows/content-pipeline.yml","spans":[{"file":".github/workflows/content-pipeline.yml","start":{"line":156,"col":17,"offset":4546},"end":{"line":156,"col":20,"offset":4549}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":".github/workflows/content-pipeline.yml","start":{"line":171,"col":17,"offset":5134},"end":{"line":171,"col":20,"offset":5137}}]],"message":"Syntax error at line .github/workflows/content-pipeline.yml:171:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected","path":".github/workflows/content-pipeline.yml","spans":[{"file":".github/workflows/content-pipeline.yml","start":{"line":171,"col":17,"offset":5134},"end":{"line":171,"col":20,"offset":5137}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":".github/workflows/content-pipeline.yml","start":{"line":188,"col":17,"offset":5831},"end":{"line":188,"col":20,"offset":5834}}]],"message":"Syntax error at line .github/workflows/content-pipeline.yml:188:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected","path":".github/workflows/content-pipeline.yml","spans":[{"file":".github/workflows/content-pipeline.yml","start":{"line":188,"col":17,"offset":5831},"end":{"line":188,"col":20,"offset":5834}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":".github/workflows/content-pipeline.yml","start":{"line":203,"col":17,"offset":6414},"end":{"line":203,"col":20,"offset":6417}}]],"message":"Syntax error at line .github/workflows/content-pipeline.yml:203:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected","path":".github/workflows/content-pipeline.yml","spans":[{"file":".github/workflows/content-pipeline.yml","start":{"line":203,"col":17,"offset":6414},"end":{"line":203,"col":20,"offset":6417}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":".github/workflows/content-pipeline.yml","start":{"line":223,"col":17,"offset":7143},"end":{"line":223,"col":20,"offset":7146}}]],"message":"Syntax error at line .github/workflows/content-pipeline.yml:223:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected","path":".github/workflows/content-pipeline.yml","spans":[{"file":".github/workflows/content-pipeline.yml","start":{"line":223,"col":17,"offset":7143},"end":{"line":223,"col":20,"offset":7146}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":".github/workflows/content-pipeline.yml","start":{"line":343,"col":26,"offset":11224},"end":{"line":343,"col":63,"offset":11261}},{"path":".github/workflows/content-pipeline.yml","start":{"line":344,"col":26,"offset":11224},"end":{"line":344,"col":64,"offset":11262}},{"path":".github/workflows/content-pipeline.yml","start":{"line":345,"col":26,"offset":11224},"end":{"line":345,"col":80,"offset":11278}}]],"message":"Syntax error at line .github/workflows/content-pipeline.yml:343:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ needs.pipeline-orchestration.result` was unexpected","path":".github/workflows/content-pipeline.yml","spans":[{"file":".github/workflows/content-pipeline.yml","start":{"line":343,"col":26,"offset":11224},"end":{"line":343,"col":63,"offset":11261}},{"file":".github/workflows/content-pipeline.yml","start":{"line":344,"col":26,"offset":11224},"end":{"line":344,"col":64,"offset":11262}},{"file":".github/workflows/content-pipeline.yml","start":{"line":345,"col":26,"offset":11224},"end":{"line":345,"col":80,"offset":11278}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":".github/workflows/deploy.yml","start":{"line":103,"col":22,"offset":2551},"end":{"line":103,"col":52,"offset":2581}}]],"message":"Syntax error at line .github/workflows/deploy.yml:103:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ secrets.STAGING_DATABASE_URL` was unexpected","path":".github/workflows/deploy.yml","spans":[{"file":".github/workflows/deploy.yml","start":{"line":103,"col":22,"offset":2551},"end":{"line":103,"col":52,"offset":2581}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":".github/workflows/deploy.yml","start":{"line":177,"col":22,"offset":5229},"end":{"line":177,"col":55,"offset":5262}}]],"message":"Syntax error at line .github/workflows/deploy.yml:177:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ secrets.PRODUCTION_DATABASE_URL` was unexpected","path":".github/workflows/deploy.yml","spans":[{"file":".github/workflows/deploy.yml","start":{"line":177,"col":22,"offset":5229},"end":{"line":177,"col":55,"offset":5262}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":".github/workflows/deploy.yml","start":{"line":228,"col":24,"offset":7357},"end":{"line":228,"col":75,"offset":7408}},{"path":".github/workflows/deploy.yml","start":{"line":229,"col":20,"offset":7357},"end":{"line":229,"col":52,"offset":7389}},{"path":".github/workflows/deploy.yml","start":{"line":230,"col":25,"offset":7357},"end":{"line":230,"col":62,"offset":7394}}]],"message":"Syntax error at line .github/workflows/deploy.yml:228:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ needs.pre-deploy-validation.outputs.deployment-id` was unexpected","path":".github/workflows/deploy.yml","spans":[{"file":".github/workflows/deploy.yml","start":{"line":228,"col":24,"offset":7357},"end":{"line":228,"col":75,"offset":7408}},{"file":".github/workflows/deploy.yml","start":{"line":229,"col":20,"offset":7357},"end":{"line":229,"col":52,"offset":7389}},{"file":".github/workflows/deploy.yml","start":{"line":230,"col":25,"offset":7357},"end":{"line":230,"col":62,"offset":7394}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":".github/workflows/deploy.yml","start":{"line":317,"col":25,"offset":10816},"end":{"line":317,"col":57,"offset":10848}}]],"message":"Syntax error at line .github/workflows/deploy.yml:317:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ needs.deploy-production.result` was unexpected","path":".github/workflows/deploy.yml","spans":[{"file":".github/workflows/deploy.yml","start":{"line":317,"col":25,"offset":10816},"end":{"line":317,"col":57,"offset":10848}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":".github/workflows/markdown-quality.yml","start":{"line":111,"col":34,"offset":3656},"end":{"line":111,"col":79,"offset":3701}}]],"message":"Syntax error at line .github/workflows/markdown-quality.yml:111:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ steps.initial_check.outputs.violation_count` was unexpected","path":".github/workflows/markdown-quality.yml","spans":[{"file":".github/workflows/markdown-quality.yml","start":{"line":111,"col":34,"offset":3656},"end":{"line":111,"col":79,"offset":3701}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":".github/workflows/markdown-quality.yml","start":{"line":143,"col":17,"offset":4293},"end":{"line":143,"col":20,"offset":4296}}]],"message":"Syntax error at line .github/workflows/markdown-quality.yml:143:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected","path":".github/workflows/markdown-quality.yml","spans":[{"file":".github/workflows/markdown-quality.yml","start":{"line":143,"col":17,"offset":4293},"end":{"line":143,"col":20,"offset":4296}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":".github/workflows/security.yml","start":{"line":489,"col":26,"offset":16377},"end":{"line":489,"col":56,"offset":16407}},{"path":".github/workflows/security.yml","start":{"line":490,"col":24,"offset":16377},"end":{"line":490,"col":52,"offset":16405}},{"path":".github/workflows/security.yml","start":{"line":491,"col":23,"offset":16377},"end":{"line":491,"col":50,"offset":16404}},{"path":".github/workflows/security.yml","start":{"line":492,"col":30,"offset":16377},"end":{"line":492,"col":64,"offset":16411}},{"path":".github/workflows/security.yml","start":{"line":493,"col":29,"offset":16377},"end":{"line":493,"col":62,"offset":16410}},{"path":".github/workflows/security.yml","start":{"line":496,"col":10,"offset":16377},"end":{"line":496,"col":40,"offset":16407}},{"path":".github/workflows/security.yml","start":{"line":497,"col":10,"offset":16377},"end":{"line":497,"col":38,"offset":16405}},{"path":".github/workflows/security.yml","start":{"line":498,"col":10,"offset":16377},"end":{"line":498,"col":37,"offset":16404}}]],"message":"Syntax error at line .github/workflows/security.yml:489:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ needs.dependency-scan.result` was unexpected","path":".github/workflows/security.yml","spans":[{"file":".github/workflows/security.yml","start":{"line":489,"col":26,"offset":16377},"end":{"line":489,"col":56,"offset":16407}},{"file":".github/workflows/security.yml","start":{"line":490,"col":24,"offset":16377},"end":{"line":490,"col":52,"offset":16405}},{"file":".github/workflows/security.yml","start":{"line":491,"col":23,"offset":16377},"end":{"line":491,"col":50,"offset":16404}},{"file":".github/workflows/security.yml","start":{"line":492,"col":30,"offset":16377},"end":{"line":492,"col":64,"offset":16411}},{"file":".github/workflows/security.yml","start":{"line":493,"col":29,"offset":16377},"end":{"line":493,"col":62,"offset":16410}},{"file":".github/workflows/security.yml","start":{"line":496,"col":10,"offset":16377},"end":{"line":496,"col":40,"offset":16407}},{"file":".github/workflows/security.yml","start":{"line":497,"col":10,"offset":16377},"end":{"line":497,"col":38,"offset":16405}},{"file":".github/workflows/security.yml","start":{"line":498,"col":10,"offset":16377},"end":{"line":498,"col":37,"offset":16404}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":".github/workflows/test-and-coverage.yml","start":{"line":229,"col":46,"offset":7049},"end":{"line":229,"col":49,"offset":7052}},{"path":".github/workflows/test-and-coverage.yml","start":{"line":229,"col":73,"offset":7049},"end":{"line":229,"col":76,"offset":7052}}]],"message":"Syntax error at line .github/workflows/test-and-coverage.yml:229:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected","path":".github/workflows/test-and-coverage.yml","spans":[{"file":".github/workflows/test-and-coverage.yml","start":{"line":229,"col":46,"offset":7049},"end":{"line":229,"col":49,"offset":7052}},{"file":".github/workflows/test-and-coverage.yml","start":{"line":229,"col":73,"offset":7049},"end":{"line":229,"col":76,"offset":7052}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":".github/workflows/test-and-coverage.yml","start":{"line":327,"col":6,"offset":10015},"end":{"line":332,"col":18,"offset":10228}}]],"message":"Syntax error at line .github/workflows/test-and-coverage.yml:327:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `\"R`Op Running E2E tests with Playwright managing server startup\"\necho \"   BASE_URL: ${BASE_URL}\"\necho \"   DEV_SERVER_PORT: ${DEV_SERVER_PORT}\"\n\n# Let Playwright handle server startup and shutdown\nnpm run test:e2e\n` was unexpected","path":".github/workflows/test-and-coverage.yml","spans":[{"file":".github/workflows/test-and-coverage.yml","start":{"line":327,"col":6,"offset":10015},"end":{"line":332,"col":18,"offset":10228}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":".github/workflows/test-and-coverage.yml","start":{"line":435,"col":22,"offset":14955},"end":{"line":435,"col":53,"offset":14986}}]],"message":"Syntax error at line .github/workflows/test-and-coverage.yml:435:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `A Performing final quality gate` was unexpected","path":".github/workflows/test-and-coverage.yml","spans":[{"file":".github/workflows/test-and-coverage.yml","start":{"line":435,"col":22,"offset":14955},"end":{"line":435,"col":53,"offset":14986}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"quality-control-configs/.github/workflows/markdown-quality.yml","start":{"line":80,"col":9,"offset":2152},"end":{"line":80,"col":56,"offset":2199}},{"path":"quality-control-configs/.github/workflows/markdown-quality.yml","start":{"line":81,"col":23,"offset":2152},"end":{"line":81,"col":70,"offset":2199}}]],"message":"Syntax error at line quality-control-configs/.github/workflows/markdown-quality.yml:80:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ steps.changed-files.outputs.all_changed_files` was unexpected","path":"quality-control-configs/.github/workflows/markdown-quality.yml","spans":[{"file":"quality-control-configs/.github/workflows/markdown-quality.yml","start":{"line":80,"col":9,"offset":2152},"end":{"line":80,"col":56,"offset":2199}},{"file":"quality-control-configs/.github/workflows/markdown-quality.yml","start":{"line":81,"col":23,"offset":2152},"end":{"line":81,"col":70,"offset":2199}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"quality-control-configs/.github/workflows/markdown-quality.yml","start":{"line":125,"col":20,"offset":3624},"end":{"line":138,"col":33,"offset":4101}}]],"message":"Syntax error at line quality-control-configs/.github/workflows/markdown-quality.yml:125:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `\"R`UN Running advanced markdown linting...\"\n\n# Run with detailed output\nmarkdownlint-cli2 \\\n  --config .markdownlint-cli2.yaml \\\n  --output-file markdown-lint-results.json \\\n  --json \\\n  ${{ needs.quick-validation.outputs.changed_files }} || true\n\n# Generate human-readable report\npython quality-control-configs/scripts/markdown-quality-cli.py check \\\n  --config .markdownlint-cli2.yaml \\\n  ${{ needs.quick-validation.outputs.changed_files }} \\\n  > markdown-quality-report.txt\n` was unexpected","path":"quality-control-configs/.github/workflows/markdown-quality.yml","spans":[{"file":"quality-control-configs/.github/workflows/markdown-quality.yml","start":{"line":125,"col":20,"offset":3624},"end":{"line":138,"col":33,"offset":4101}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"quality-control-configs/.github/workflows/markdown-quality.yml","start":{"line":144,"col":20,"offset":4383},"end":{"line":167,"col":2,"offset":5058}}]],"message":"Syntax error at line quality-control-configs/.github/workflows/markdown-quality.yml:144:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `\"R`T^ Running prose quality analysis...\"\n\n# Install Vale if not available\nwget -O vale.tar.gz https://github.com/errata-ai/vale/releases/latest/download/vale_Linux_64-bit.tar.gz\ntar -xzf vale.tar.gz\nsudo mv vale /usr/local/bin/\n\n# Run Vale\nvale --config=.vale.ini \\\n     --output=JSON \\\n     ${{ needs.quick-validation.outputs.changed_files }} \\\n     > vale-results.json || true\n\n# Generate summary\npython -c \"\nimport json, sys\ntry:\n    with open('vale-results.json') as f:\n        data = json.load(f)\n    total_issues = sum(len(issues) for issues in data.values())\n    print(f'Prose quality issues found: {total_issues}')\nexcept:\n    print('No prose quality issues found')\n\"` was unexpected","path":"quality-control-configs/.github/workflows/markdown-quality.yml","spans":[{"file":"quality-control-configs/.github/workflows/markdown-quality.yml","start":{"line":144,"col":20,"offset":4383},"end":{"line":167,"col":2,"offset":5058}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"quality-control-configs/.github/workflows/markdown-quality.yml","start":{"line":173,"col":20,"offset":5431},"end":{"line":182,"col":64,"offset":5776}}]],"message":"Syntax error at line quality-control-configs/.github/workflows/markdown-quality.yml:173:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `\"R`UX Validating links...\"\n\n# Check internal and external links\nfor file in ${{ needs.quick-validation.outputs.changed_files }}; do\n  echo \"Checking links in $file...\"\n  markdown-link-check \"$file\" --config .markdown-link-check.json || true\ndone > link-check-results.txt\n\n# Summary\necho \"Link validation completed. Check artifacts for details.\"\n` was unexpected","path":"quality-control-configs/.github/workflows/markdown-quality.yml","spans":[{"file":"quality-control-configs/.github/workflows/markdown-quality.yml","start":{"line":173,"col":20,"offset":5431},"end":{"line":182,"col":64,"offset":5776}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"quality-control-configs/.github/workflows/markdown-quality.yml","start":{"line":188,"col":20,"offset":6019},"end":{"line":223,"col":3,"offset":7079}}]],"message":"Syntax error at line quality-control-configs/.github/workflows/markdown-quality.yml:188:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `\"R`TK Analyzing content quality...\"\n\npython quality-control-configs/scripts/markdown-quality-cli.py report \\\n  --format json \\\n  --output content-analysis.json \\\n  ${{ needs.quick-validation.outputs.changed_files }}\n\n# Generate quality score\npython -c \"\nimport json\nwith open('content-analysis.json') as f:\n    data = json.load(f)\n\ntotal_files = data['total_files']\ntotal_issues = data['total_issues']\nfixable_issues = data['fixable_issues']\n\n# Calculate quality score (0-100)\nif total_files == 0:\n    score = 100\nelse:\n    # Penalty system: -5 for each error, -2 for each warning\n    error_penalty = data['issues_by_severity'].get('error', 0) * 5\n    warning_penalty = data['issues_by_severity'].get('warning', 0) * 2\n    total_penalty = error_penalty + warning_penalty\n    \n    score = max(0, 100 - (total_penalty / total_files))\n\nprint(f'Content Quality Score: {score:.1f}/100')\nprint(f'Total Issues: {total_issues}')\nprint(f'Fixable Issues: {fixable_issues}')\n\n# Save score for later use\nwith open('quality-score.txt', 'w') as f:\n    f.write(str(score))\n\"\n` was unexpected","path":"quality-control-configs/.github/workflows/markdown-quality.yml","spans":[{"file":"quality-control-configs/.github/workflows/markdown-quality.yml","start":{"line":188,"col":20,"offset":6019},"end":{"line":223,"col":3,"offset":7079}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"quality-control-configs/.github/workflows/markdown-quality.yml","start":{"line":262,"col":20,"offset":8488},"end":{"line":273,"col":55,"offset":8854}}]],"message":"Syntax error at line quality-control-configs/.github/workflows/markdown-quality.yml:262:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `\"R`Uh Attempting auto-fixes for safe issues...\"\n\n# Run auto-fix for safe rules\nmarkdownlint-cli2 \\\n  --config .markdownlint-cli2.yaml \\\n  --fix \\\n  ${{ needs.quick-validation.outputs.changed_files }}\n\n# Run custom fixes\npython quality-control-configs/scripts/markdown-quality-cli.py migrate \\\n  --batch-size 5 \\\n  ${{ needs.quick-validation.outputs.changed_files }}\n` was unexpected","path":"quality-control-configs/.github/workflows/markdown-quality.yml","spans":[{"file":"quality-control-configs/.github/workflows/markdown-quality.yml","start":{"line":262,"col":20,"offset":8488},"end":{"line":273,"col":55,"offset":8854}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"quality-control-configs/.github/workflows/markdown-quality.yml","start":{"line":437,"col":26,"offset":14944},"end":{"line":437,"col":76,"offset":14994}},{"path":"quality-control-configs/.github/workflows/markdown-quality.yml","start":{"line":438,"col":23,"offset":14944},"end":{"line":438,"col":70,"offset":14991}}]],"message":"Syntax error at line quality-control-configs/.github/workflows/markdown-quality.yml:437:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ steps.quality-assessment.outputs.critical_issues` was unexpected","path":"quality-control-configs/.github/workflows/markdown-quality.yml","spans":[{"file":"quality-control-configs/.github/workflows/markdown-quality.yml","start":{"line":437,"col":26,"offset":14944},"end":{"line":437,"col":76,"offset":14994}},{"file":"quality-control-configs/.github/workflows/markdown-quality.yml","start":{"line":438,"col":23,"offset":14944},"end":{"line":438,"col":70,"offset":14991}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"quality-control-configs/.github/workflows/markdown-quality.yml","start":{"line":460,"col":20,"offset":15760},"end":{"line":490,"col":3,"offset":16735}}]],"message":"Syntax error at line quality-control-configs/.github/workflows/markdown-quality.yml:460:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `\"R`TI Collecting quality metrics for main branch...\"\n\n# Run full quality assessment\npip install pyyaml frontmatter textstat\npython quality-control-configs/scripts/markdown-quality-cli.py report \\\n  --format json \\\n  --output quality-metrics-$(date +%Y%m%d).json \\\n  apps/site/src/content\n\n# Calculate trend data\npython -c \"\nimport json\nfrom datetime import datetime\n\nwith open('quality-metrics-$(date +%Y%m%d).json') as f:\n    data = json.load(f)\n\nmetrics = {\n    'timestamp': datetime.now().isoformat(),\n    'total_files': data['total_files'],\n    'total_issues': data['total_issues'],\n    'quality_score': max(0, 100 - (data['total_issues'] / max(1, data['total_files']) * 2)),\n    'issues_by_severity': data['issues_by_severity'],\n    'top_rules': sorted(data['issues_by_rule'].items(), key=lambda x: x[1], reverse=True)[:5]\n}\n\nwith open('quality-trend.json', 'w') as f:\n    json.dump(metrics, f, indent=2)\n\nprint(f'Quality Score: {metrics[\\\"quality_score\\\"]:.1f}/100')\n\"\n` was unexpected","path":"quality-control-configs/.github/workflows/markdown-quality.yml","spans":[{"file":"quality-control-configs/.github/workflows/markdown-quality.yml","start":{"line":460,"col":20,"offset":15760},"end":{"line":490,"col":3,"offset":16735}}]}],"paths":{"scanned":[".github/CODEOWNERS",".github/ISSUE_TEMPLATE/01-bug-report.yml",".github/ISSUE_TEMPLATE/02-feature-request.yml",".github/ISSUE_TEMPLATE/03-content-issue.yml",".github/ISSUE_TEMPLATE/04-performance-issue.yml",".github/ISSUE_TEMPLATE/05-security-issue.yml",".github/ISSUE_TEMPLATE/config.yml",".github/PULL_REQUEST_TEMPLATE.md",".github/dependabot.yml",".github/workflows/act-compatible-test.yml",".github/workflows/cache-config.yml",".github/workflows/ci.yml",".github/workflows/content-pipeline.yml",".github/workflows/deploy-github-pages.yml",".github/workflows/deploy.yml",".github/workflows/markdown-quality.yml",".github/workflows/security.yml",".github/workflows/test-and-coverage-fixed.yml",".github/workflows/test-and-coverage.yml",".gitignore",".port-allocation.json",".pre-commit-config.yaml",".secrets.example",".security/compliance_matrix.md",".security/incident_playbook.md",".security/privacy_policy.md",".security/security_policy.md","ARCHITECTURE.md","CLAUDE.md","MARKDOWN_QUALITY_SYSTEM.md","Makefile","NEXT_STEPS.md","README.md","act-installation.sh","act-services/docker-compose.yml","act-services/init-scripts/01-init-test-db.sql","act-services/wiremock/mappings/anthropic-api-mock.json","act-services/wiremock/mappings/openai-api-mock.json","apps/site/.markdownlint.json","apps/site/astro.config.mjs","apps/site/jest.config.js","apps/site/middleware/csp-nonce.js","apps/site/middleware/security.js","apps/site/package-lock.json","apps/site/package.json","apps/site/playwright-results.json","apps/site/playwright-results.xml","apps/site/playwright.config.js","apps/site/public/favicon.svg","apps/site/security.config.js","apps/site/src/content/articles/choosing-right-ml-algorithm.md","apps/site/src/content/articles/getting-started-with-ai.md","apps/site/src/content/articles/practical-prompt-engineering.md","apps/site/src/content/articles/transformer-revolution.md","apps/site/src/content/articles/understanding-neural-networks.md","apps/site/src/content/glossary/agent.md","apps/site/src/content/glossary/artificial-intelligence.md","apps/site/src/content/glossary/attention-mechanism.md","apps/site/src/content/glossary/backpropagation.md","apps/site/src/content/glossary/bert.md","apps/site/src/content/glossary/cnn.md","apps/site/src/content/glossary/deep-learning.md","apps/site/src/content/glossary/embedding.md","apps/site/src/content/glossary/fine-tuning.md","apps/site/src/content/glossary/gan.md","apps/site/src/content/glossary/gpt.md","apps/site/src/content/glossary/gradient-descent.md","apps/site/src/content/glossary/llm.md","apps/site/src/content/glossary/lstm.md","apps/site/src/content/glossary/machine-learning.md","apps/site/src/content/glossary/neural-network.md","apps/site/src/content/glossary/overfitting.md","apps/site/src/content/glossary/prompt-engineering.md","apps/site/src/content/glossary/rag.md","apps/site/src/content/glossary/reinforcement-learning.md","apps/site/src/content/glossary/rnn.md","apps/site/src/content/glossary/supervised-learning.md","apps/site/src/content/glossary/tokenization.md","apps/site/src/content/glossary/transformer.md","apps/site/src/content/glossary/unsupervised-learning.md","apps/site/src/content/taxonomies/categories.json","apps/site/src/content/taxonomies/tags.json","apps/site/src/content.config.ts","apps/site/src/env.d.ts","apps/site/src/layouts/BaseLayout.astro","apps/site/src/layouts/GlossaryLayout.astro","apps/site/src/pages/about.astro","apps/site/src/pages/articles/index.astro","apps/site/src/pages/glossary/[...slug].astro","apps/site/src/pages/glossary/index.astro","apps/site/src/pages/index.astro","apps/site/src/utils/paths.ts","apps/site/tsconfig.json","apps/site/vitest.config.js","codecov.yml","configs/.actrc","configs/.bandit","configs/.coveragerc","configs/.env.act","configs/README.md","coverage.config.js","data/curated/.gitkeep","data/sources/.gitkeep","docs/ACT_DEVELOPER_GUIDE.md","docs/API_DOCUMENTATION.md","docs/ARCHITECTURE_VALIDATION_REPORT.md","docs/CODE_STANDARDS.md","docs/CONTRIBUTING.md","docs/DATABASE_OPTIONS.md","docs/DEPLOYMENT_GUIDE.md","docs/DEVELOPMENT_GUIDE.md","docs/IMPLEMENTATION_GUIDE.md","docs/MONITORING_GUIDE.md","docs/SECRETS_CONFIGURATION.md","docs/SECURITY_OVERVIEW.md","docs/SUPABASE_CONNECTION_GUIDE.md","docs/TESTING_GUIDE.md","docs/TROUBLESHOOTING.md","docs/adrs/001-content-pipeline-architecture.md","docs/adrs/002-duplicate-detection-strategy.md","docs/adrs/005-workflow-orchestration.md","docs/adrs/README.md","docs/ci-cd/CI_CD_PHASE1_IMPLEMENTATION.md","docs/ci-cd/CI_CD_README.md","docs/ci-cd/CI_CD_TEST_FIXES.md","docs/ci-cd/README.md","fix_markdown_linting.py","pipelines/.env.example","pipelines/README.md","pipelines/__init__.py","pipelines/config.py","pipelines/database/__init__.py","pipelines/database/connection.py","pipelines/database/models.py","pipelines/dedup/__init__.py","pipelines/dedup/lsh_index.py","pipelines/dedup/simhash.py","pipelines/enrich/__init__.py","pipelines/enrich/cross_linker.py","pipelines/enrich/summarizer.py","pipelines/exceptions.py","pipelines/ingest/__init__.py","pipelines/ingest/rss_parser.py","pipelines/ingest/scraper.py","pipelines/ingest/source_manager.py","pipelines/ingest/sources.yaml","pipelines/logging_config.py","pipelines/monitoring.py","pipelines/normalize/__init__.py","pipelines/normalize/content_extractor.py","pipelines/normalize/html_cleaner.py","pipelines/orchestrators/langgraph/__init__.py","pipelines/orchestrators/langgraph/nodes.py","pipelines/orchestrators/langgraph/workflow.py","pipelines/publish/__init__.py","pipelines/publish/markdown_generator.py","pipelines/requirements-ai.txt","pipelines/requirements-ci-new.txt","pipelines/requirements-ci.txt","pipelines/requirements-core.txt","pipelines/requirements-dev.txt","pipelines/requirements.txt","pipelines/run_graph.py","pipelines/security/__init__.py","pipelines/security/input_validator.py","pyproject.toml","pytest.ini","quality-control-configs/.github/workflows/markdown-quality.yml","quality-control-configs/.markdown-link-check.json","quality-control-configs/.markdownlint-cli2.yaml","quality-control-configs/.pre-commit-config.yaml","quality-control-configs/.vale.ini","quality-control-configs/ARCHITECTURE_SUMMARY.md","quality-control-configs/IMPLEMENTATION_GUIDE.md","quality-control-configs/scripts/markdown-quality-cli.py","quality-control-configs/scripts/migrate-current-violations.py","quality-control-configs/scripts/quality-dashboard.py","quality-control-configs/vale-styles/AIKnowledge/Acronyms.yml","quality-control-configs/vale-styles/AIKnowledge/Vocab/AIKnowledge/accept.txt","quality-control-configs/vale-styles/AIKnowledge/meta.json","run_tests.sh","scripts/batch_content_migration.py","scripts/check_content_freshness.py","scripts/deploy.sh","scripts/fix-github-pages-links.sh","scripts/fix_bandit_issues.py","scripts/fix_flake8_issues.py","scripts/fix_markdown_violations.py","scripts/generate-analysis-summary.py","scripts/health-check.js","scripts/init_database.py","scripts/install-dependencies-improved.sh","scripts/install-dependencies.sh","scripts/integration_tests.py","scripts/link_checker.py","scripts/markdown_quality_fixer.py","scripts/markdown_quality_hook.py","scripts/migrate_current_violations.py","scripts/performance_test.py","scripts/port-allocator.js","scripts/pre-commit-link-check.sh","scripts/quality_dashboard.py","scripts/requirements.txt","scripts/run-tests.sh","scripts/setup-real-secrets.sh","scripts/setup_quality_system.sh","scripts/validate_content.py","scripts/validate_frontmatter_hook.py","security/__init__.py","security/auth_middleware.py","security/compliance_checker.py","security/content_sanitizer.py","security/copyright_patterns.yaml","security/incident_response.py","security/input_validator.py","security/requirements.txt","security/secrets_manager.py","security/security_headers.py","security/security_monitor.py","test-analysis.md"]},"time":{"rules":[],"rules_parse_time":0.9170079231262207,"profiling_times":{"config_time":4.803179979324341,"core_time":3.691061019897461,"ignores_time":0.0010547637939453125,"total_time":8.496074914932251},"parsing_time":{"total_time":0.0,"per_file_time":{"mean":0.0,"std_dev":0.0},"very_slow_stats":{"time_ratio":0.0,"count_ratio":0.0},"very_slow_files":[]},"scanning_time":{"total_time":16.644404649734497,"per_file_time":{"mean":0.02977532137698478,"std_dev":0.009795477773785956},"very_slow_stats":{"time_ratio":0.0,"count_ratio":0.0},"very_slow_files":[]},"matching_time":{"total_time":0.0,"per_file_and_rule_time":{"mean":0.0,"std_dev":0.0},"very_slow_stats":{"time_ratio":0.0,"count_ratio":0.0},"very_slow_rules_on_files":[]},"tainting_time":{"total_time":0.0,"per_def_and_rule_time":{"mean":0.0,"std_dev":0.0},"very_slow_stats":{"time_ratio":0.0,"count_ratio":0.0},"very_slow_rules_on_defs":[]},"fixpoint_timeouts":[],"prefiltering":{"project_level_time":0.0,"file_level_time":0.0,"rules_with_project_prefilters_ratio":0.0,"rules_with_file_prefilters_ratio":0.9653168694388959,"rules_selected_ratio":0.06649718540039949,"rules_matched_ratio":0.06649718540039949},"targets":[],"total_bytes":0,"max_memory_bytes":1127572480},"engine_requested":"OSS","skipped_rules":[]}